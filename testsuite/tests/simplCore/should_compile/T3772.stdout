
==================== Tidy Core ====================
Result size of Tidy Core = {terms: 36, types: 14, coercions: 0}

T3772.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 20}]
T3772.$trModule1 = GHC.Types.TrNameS "T3772"#

T3772.$trModule2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 20}]
T3772.$trModule2 = GHC.Types.TrNameS "main"#

Rec {
$wxs :: GHC.Prim.Int# -> ()
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType <S,1*U>]
$wxs =
  \ (ww :: GHC.Prim.Int#) ->
    case ww of ds1 {
      __DEFAULT -> $wxs (GHC.Prim.-# ds1 1#);
      1# -> GHC.Tuple.()
    }
end Rec }

foo [InlPrag=NOINLINE] :: Int -> ()
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType <S,1*U(U)>]
foo =
  \ (n :: Int) ->
    case n of _ [Occ=Dead] { GHC.Types.I# y ->
    case GHC.Prim.tagToEnum# @ Bool (GHC.Prim.<# 0# y)
    of _ [Occ=Dead] {
      False -> GHC.Tuple.();
      True -> $wxs y
    }
    }

T3772.$trModule :: GHC.Types.Module
[GblId[ReflectionId],
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
T3772.$trModule =
  GHC.Types.Module T3772.$trModule2 T3772.$trModule1



